{"ast":null,"code":"var _jsxFileName = \"/home/stawisha/data-leakage-detection/src/DataLeakTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport \"./DataLeakTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleData = [{\n  id: 1,\n  date: \"2025-04-15\",\n  source: \"Internal Network\",\n  status: \"Resolved\"\n}, {\n  id: 2,\n  date: \"2025-04-14\",\n  source: \"Cloud Storage\",\n  status: \"Pending\"\n}, {\n  id: 3,\n  date: \"2025-04-13\",\n  source: \"Email Server\",\n  status: \"Under Review\"\n}];\nconst DataLeakTable = () => {\n  _s();\n  const [data] = useState(sampleData);\n  const exportPDF = data => {\n    const doc = new jsPDF();\n    doc.text(\"Data Leakage Detection Report\", 14, 20);\n    const tableColumn = [\"ID\", \"Date\", \"Source\", \"Status\"];\n    const tableRows = [];\n    data.forEach(leak => {\n      const leakData = [leak.id, leak.date, leak.source, leak.status];\n      tableRows.push(leakData);\n    });\n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 30\n    });\n    doc.save(\"Data_Leakage_Report.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Leakage Detection Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportPDF(data),\n      className: \"btn\",\n      children: \"Export to PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(leak => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: leak.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: leak.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: leak.source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: leak.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, leak.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(DataLeakTable, \"HYjMLODV70bgDNFSkfs5+uOClCk=\");\n_c = DataLeakTable;\nexport default DataLeakTable;\nvar _c;\n$RefreshReg$(_c, \"DataLeakTable\");","map":{"version":3,"names":["React","useState","jsPDF","jsxDEV","_jsxDEV","sampleData","id","date","source","status","DataLeakTable","_s","data","exportPDF","doc","text","tableColumn","tableRows","forEach","leak","leakData","push","autoTable","head","body","startY","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["/home/stawisha/data-leakage-detection/src/DataLeakTable.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport \"./DataLeakTable.css\";\n\nconst sampleData = [\n  { id: 1, date: \"2025-04-15\", source: \"Internal Network\", status: \"Resolved\" },\n  { id: 2, date: \"2025-04-14\", source: \"Cloud Storage\", status: \"Pending\" },\n  { id: 3, date: \"2025-04-13\", source: \"Email Server\", status: \"Under Review\" },\n];\n\nconst DataLeakTable = () => {\n  const [data] = useState(sampleData);\n\n  const exportPDF = (data) => {\n    const doc = new jsPDF();\n    doc.text(\"Data Leakage Detection Report\", 14, 20);\n\n    const tableColumn = [\"ID\", \"Date\", \"Source\", \"Status\"];\n    const tableRows = [];\n\n    data.forEach((leak) => {\n      const leakData = [leak.id, leak.date, leak.source, leak.status];\n      tableRows.push(leakData);\n    });\n\n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 30,\n    });\n\n    doc.save(\"Data_Leakage_Report.pdf\");\n  };\n\n  return (\n    <div className=\"table-container\">\n      <h2>Data Leakage Detection Table</h2>\n      <button onClick={() => exportPDF(data)} className=\"btn\">\n        Export to PDF\n      </button>\n      <table className=\"data-table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Date</th>\n            <th>Source</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((leak) => (\n            <tr key={leak.id}>\n              <td>{leak.id}</td>\n              <td>{leak.date}</td>\n              <td>{leak.source}</td>\n              <td>{leak.status}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default DataLeakTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}